{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMEeSNywGSkC7T/ssW8TyZP",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/oscar88roman/Building3D_Urban/blob/main/Course_PoliMi\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Problem: ask the user a temperature in Fahrenheit and print the corresponding Celsius value using the the formula C = 5/9 (F-32).\n"
      ],
      "metadata": {
        "id": "wSbCN5k9TZHB"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xLXNdQBXPeL0",
        "outputId": "4001f26a-4fef-4645-e968-da3b41a1ed15"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter the temperature in Fahrenheit:55\n",
            "12.777777777777779\n"
          ]
        }
      ],
      "source": [
        "# Ask the user the Fahrenheit temperarature. Notice that the input given by the #user is a string\n",
        "fahrenheit_string = input(\"Enter the temperature in Fahrenheit:\")\n",
        "# Convert the string to number (casting)\n",
        "fahrenheit = float(fahrenheit_string)\n",
        "# Use the conversion formula to find the Celsius temperature\n",
        "celsius = (fahrenheit - 32) * 5/9\n",
        "\n",
        "#Print the Celsius value\n",
        "print(celsius)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def convert (s):\n",
        "  f = float(s)\n",
        "  c = (f - 32) * 5/9\n",
        "  return c"
      ],
      "metadata": {
        "id": "ZV9B14PPVFef"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "CONVERT Kelvin --> Faranheit"
      ],
      "metadata": {
        "id": "_k8BO_cxXQVo"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "faranheit = 1.8 * (celsius - 273.15) + 32\n",
        "print ('Faranheit :', faranheit)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EYfZd4FAXVQn",
        "outputId": "84ccaeb8-b192-4b6d-a3d3-407fe18b7347"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Faranheit : -436.66999999999996\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "VANDERWAALS FUNCTION"
      ],
      "metadata": {
        "id": "piDIJFjPfpeT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def vanderwaals2 (P, V, n, a , b):\n",
        "  R = 8.314\n",
        "  T = (P + a * (n / V)**2) * (V - n * b) / (R * n)\n",
        "  return R\n",
        ""
      ],
      "metadata": {
        "id": "qVZAKgPjfIlT"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "P = vanderwaals2 (273, 0.022,1, a = 2.45-2 , b = 26.61-6)\n",
        "print (P)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4hpzpYxggoxJ",
        "outputId": "06393bf2-3168-477e-fb24-fbfbd5cacf59"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "8.314\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "P_sn = \"{:e}\".format(P)\n",
        "print (P_sn)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-KPV65P8koLR",
        "outputId": "943a39a9-cd26-4de2-978b-b847cd2e7dc4"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "8.314000e+00\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "AREA OF A CIRCLE\n"
      ],
      "metadata": {
        "id": "KHYdAZ51lRoj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def circle1 (r):\n",
        "  import math\n",
        "  L = 2 * math.pi * r\n",
        "  A = math.pi * r ** 2\n",
        "  return L, A"
      ],
      "metadata": {
        "id": "xChwSQhslVng"
      },
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "help (circle1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IwYhs0M2l3Gn",
        "outputId": "af4f1adc-716c-4dba-dee5-1410dfba0a87"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Help on function circle1 in module __main__:\n",
            "\n",
            "circle1(r)\n",
            "\n"
          ]
        }
      ]
    }
  ]
}
